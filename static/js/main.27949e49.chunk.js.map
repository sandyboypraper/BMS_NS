{"version":3,"sources":["logo.svg","Components/MyInput.js","Components/InputHandler.js","Components/ShowDB.js","Components/DataBase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyInput","state","Number","tags","NumberOfDashes","delete","vv","props","setState","Fragment","className","this","map","tag","index","key","onClick","indexToRemove","filter","_","type","onKeyDown","event","e","target","value","selectedTags","addTags","length","handleBackSpace","placeholder","onChange","v","isNaN","console","log","slice","backspace","Button","Component","InputHandler","passed","ShowDB","Listii","numbers","temp","Math","random","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","addnumber","Footer","onHide","DataBase","show","EditData","variant","App","prevArr","i","indexOf","split","e1","parseInt","e2","ee","setTimeout","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27949e49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Button} from 'react-bootstrap';\n\nclass MyInput extends Component {\n\n\n    state = {\n        Number : 0,\n        tags : [],\n        NumberOfDashes : 0,\n    }\n\n    delete = () => {\n        var vv = this.state.tags;\n        this.props.delete(vv);\n        this.setState({\n            tags : [],\n        })\n    }\n\n    render()\n    {\n        \n        const removeTags = indexToRemove => {\n            this.setState(\n                {\n                    tags: [...this.state.tags.filter((_, index) => index !== indexToRemove)],\n                }\n               );\n        };\n\n        const addTags = event => {\n            if (event.target.value !== \"\") {    \n                this.setState({\n                    tags : [...this.state.tags, event.target.value]\n                });\n                this.props.selectedTags([...this.state.tags, event.target.value]);\n                event.target.value = \"\";\n            }\n\n            this.setState({\n                Number:\"\",\n                NumberOfDashes : 0\n            })\n\n        };\n\n        const inputFilter = e => {\n            var v = e.target.value;\n\n            if(isNaN(v[v.length - 1]))\n            {\n                console.log(\"not a number\");\n                v = v.slice(0 , v.length - 1);\n            }\n\n            this.setState({\n                Number : v,\n                backspace:false,\n            })\n        }\n\n        const handleDashes = e => {\n            if(this.state.NumberOfDashes == 0)\n             {\n                 this.setState({\n                    Number : e.target.value + '-',\n                    NumberOfDashes : 1\n                 })\n             }\n        }\n\n        const handleBackSpace = e => {\n            if(e.target.value[e.target.value.length - 1] == \"-\")\n             {\n                 this.setState({\n                    NumberOfDashes : 0\n                 })\n             }\n        }\n       \n        return (\n            <React.Fragment>\n            <div className=\"tags-input animated bounceInLeft\">\n\t\t\t<ul>\n\t\t\t\t{this.state.tags.map((tag, index) => (\n\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t<span>{tag}</span>\n\t\t\t\t\t\t<i\n\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\tonClick={() => removeTags(index)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tclose\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<input\n                type=\"text\"\n                onKeyDown={event => \n                    \n                  {\n                      if(event.key === \"Enter\" || event.key == \",\")\n                      {\n                        addTags(event);\n                      }\n                      else if(event.key === \"-\")\n                      {\n                        handleDashes(event);\n                      }\n                      else if(event.key === \"BackSpace\")\n                      {\n                          handleBackSpace(event);\n                      }\n                     \n                }}\n                placeholder=\"Enter number OR Range\"\n                onChange = {inputFilter}\n                value = {this.state.Number}\n\t\t\t/>\n\n\t\t</div>  \n                <br/>\n                <Button onClick={this.delete} className = \"animated bounceInLeft\">\n                    Go\n                </Button>\n        </React.Fragment>\n        )\n    }\n \n}\n\nexport default MyInput;","import React from 'react';\nimport MyInput from './MyInput';\n\nfunction InputHandler(props) {\n    const selectedTags = tags => {\n        console.log(tags);\n    };\n\n    const passed = (e) => {\n        props.delete(e);\n    }\n\n  return (\n    <div className=\"App\">\n        <MyInput selectedTags={selectedTags} delete = {(e) => passed(e)}/>\n    </div>\n  );\n}\n\nexport default InputHandler;","import React from 'react';\nimport {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Modal , Button} from 'react-bootstrap'\n\nfunction ShowDB(props){\n\n\n       const Listii = props.numbers.map(temp => {\n           return (\n               <span key = {temp + Math.random()}> {temp} , </span> \n           )\n       })\n\n\n       return (\n        <div className = \"ShowDB\">\n            <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                {props.numbers.length == 0 ? (\"DataBase is Empty\") : (\"Available Numbers in DataBase\")}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {Listii}\n                <br />\n                <input type = \"number\" placeholder = \"add Numbers\" onKeyDown={event => \n                        {\n                            if(event.key === \"Enter\" && event.target.value != \"\")\n                            {\n                                props.addnumber(event.target.value);\n                                event.target.value = \"\";\n                            }\n                        }}\n                ></input>\n                        \n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n             </Modal>\n        </div>  \n       )\n   \n}\n\nexport default ShowDB;","import React from 'react';\nimport {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Button , Modal} from 'react-bootstrap';\nimport ShowDB from './ShowDB';\n\nclass DataBase extends Component {\n\n\n    state = {\n        show : false,\n        EditData : false,\n    }\n\n  \n    render()\n    {\n       return (\n        <div className = \"DataBase\">\n                <Button variant=\"primary\" onClick={() => this.setState({show : true})} className = \" animated bounceInRight\">\n                    Show DataBase\n                </Button>\n                \n                \n                <br/><br/>\n\n               \n                <ShowDB show = {this.state.show} onHide={() => this.setState({show : false}) } numbers = {this.props.numbers} addnumber = {(e) => this.props.addnumber(e)}/>\n               \n        </div>  \n       )\n      \n      \n    }\n \n}\n\nexport default DataBase;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport InputHandler from './Components/InputHandler';\nimport DataBase from './Components/DataBase';\n\n\nclass App extends React.Component {\n\n  state = {\n    numbers : [],\n  }\n\n  addnumber = (e) => {\n    console.log(e);\n    this.setState({\n        numbers : [...this.state.numbers , e]\n    })        \n  }\n\n  delete = (e) => {\n    console.log(e);\n    console.log(this.state.numbers);\n    let prevArr = this.state.numbers;\n\n    for(var i = 0;i<e.length;i++)\n    {\n      if(e[i].indexOf('-')!=-1)\n      {\n        console.log(e[i].split('-')[0]);\n        var e1 = parseInt(e[i].split('-')[0]);\n        var e2 = parseInt(e[i].split('-')[1]);\n        prevArr = prevArr.filter(ee => (parseInt(ee) > e2 || parseInt(ee) < e1));\n        console.log(prevArr);\n      }\n      else\n      {\n        console.log(e[i]);  \n        prevArr =  prevArr.filter(ee => ee != e[i]);\n      }\n    \n    }\n   \n    this.setState({\n      numbers : prevArr,\n    });\n\n    setTimeout(() => {console.log(this.state.numbers)},1000)\n\n  }\n\n  render()\n  {\n    return (\n      <div className=\"App\">\n          <InputHandler delete = {this.delete} />\n          <DataBase numbers = {this.state.numbers} addnumber = {this.addnumber} />\n      </div>\n    );\n  } \n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}